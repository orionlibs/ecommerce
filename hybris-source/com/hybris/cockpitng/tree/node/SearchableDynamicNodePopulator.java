/*
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved
 */
package com.hybris.cockpitng.tree.node;

import com.hybris.backoffice.navigation.NavigationNode;
import com.hybris.cockpitng.tree.util.TreeUtils;
import java.util.List;

/**
 * {@link DynamicNodePopulator} capable of searching for nodes it generates via text-based query
 */
public interface SearchableDynamicNodePopulator extends DynamicNodePopulator
{
    /**
     * @param root
     *           root node from which the lookup should start, it must be a node generated by the populator
     * @param filterString
     *           filtering string, default implementation assumes case-insensitive lookup and match-mode based on
     *           {@link TreeUtils.MatchMode#CONTAINS} operator
     * @return list of root nodes being the top nodes of sub-trees belonging to hte search result
     */
    default List<NavigationNode> getChildren(final DynamicNode root, final String filterString)
    {
        return getChildren(root, filterString, false, TreeUtils.MatchMode.CONTAINS);
    }


    /**
     * @param root
     *           root node from which the lookup should start, it must be a node generated by the populator
     * @param filterString
     *           filtering string
     * @param caseSensitive
     *           if set to true the search should be case-sensitive
     * @param matchMode
     *           match-mode for the lookup as defined by {@link TreeUtils.MatchMode}
     * @return list of root nodes being the top nodes of sub-trees belonging to hte search result
     */
    List<NavigationNode> getChildren(final DynamicNode root, final String filterString, final boolean caseSensitive,
                    final TreeUtils.MatchMode matchMode);
}
