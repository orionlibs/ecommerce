/*
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.16 at 02:26:31 PM CEST 
//
package com.hybris.cockpitng.core.persistence.impl.jaxb;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * Allows to change existing widget configuration (in example add/remove child widgets).
 *
 *
 * <p>Java class for WidgetExtension complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="WidgetExtension"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="move" type="{}WidgetMove" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="remove" type="{}WidgetRemoveEntry" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="remove-all" type="{}WidgetRemoveAllEntry" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="widget" type="{}Widget" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="instance-settings" type="{}InstanceSettings" minOccurs="0"/&gt;
 *         &lt;element name="setting" type="{}WidgetSetting" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{}virtual-sockets" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="widgetId" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="contextId" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "WidgetExtension", propOrder = {
                "move",
                "remove",
                "removeAll",
                "widget",
                "instanceSettings",
                "setting",
                "virtualSockets",
                "access"
})
public class WidgetExtension
{
    protected List<WidgetMove> move;
    protected List<WidgetRemoveEntry> remove;
    @XmlElement(name = "remove-all")
    protected List<WidgetRemoveAllEntry> removeAll;
    protected List<Widget> widget;
    @XmlElement(name = "instance-settings")
    protected InstanceSettings instanceSettings;
    protected List<WidgetSetting> setting;
    @XmlElement(name = "virtual-sockets")
    protected VirtualSockets virtualSockets;
    @XmlElement(name = "access")
    protected AccessSettings access;
    @XmlAttribute(name = "widgetId", required = true)
    protected String widgetId;
    @XmlAttribute(name = "contextId")
    protected String contextId;


    /**
     * Gets the value of the move property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the move property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMove().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WidgetMove }
     *
     *
     */
    public List<WidgetMove> getMove()
    {
        if(move == null)
        {
            move = new ArrayList<WidgetMove>();
        }
        return this.move;
    }


    /**
     * Gets the value of the remove property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the remove property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRemove().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WidgetRemoveEntry }
     *
     *
     */
    public List<WidgetRemoveEntry> getRemove()
    {
        if(remove == null)
        {
            remove = new ArrayList<WidgetRemoveEntry>();
        }
        return this.remove;
    }


    /**
     * Gets the value of the removeAll property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the removeAll property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRemoveAll().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WidgetRemoveAllEntry }
     *
     *
     */
    public List<WidgetRemoveAllEntry> getRemoveAll()
    {
        if(removeAll == null)
        {
            removeAll = new ArrayList<WidgetRemoveAllEntry>();
        }
        return this.removeAll;
    }


    /**
     * Gets the value of the widget property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the widget property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWidget().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Widget }
     *
     *
     */
    public List<Widget> getWidget()
    {
        if(widget == null)
        {
            widget = new ArrayList<Widget>();
        }
        return this.widget;
    }


    /**
     * Gets the value of the instanceSettings property.
     *
     * @return
     *     possible object is
     *     {@link InstanceSettings }
     *
     */
    public InstanceSettings getInstanceSettings()
    {
        return instanceSettings;
    }


    /**
     * Sets the value of the instanceSettings property.
     *
     * @param value
     *     allowed object is
     *     {@link InstanceSettings }
     *
     */
    public void setInstanceSettings(InstanceSettings value)
    {
        this.instanceSettings = value;
    }


    /**
     * Gets the value of the setting property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the setting property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSetting().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WidgetSetting }
     *
     *
     */
    public List<WidgetSetting> getSetting()
    {
        if(setting == null)
        {
            setting = new ArrayList<WidgetSetting>();
        }
        return this.setting;
    }


    /**
     * Set of virtual (dynamic) slots of widget instance.
     *
     * @return
     *     possible object is
     *     {@link VirtualSockets }
     *
     */
    public VirtualSockets getVirtualSockets()
    {
        return virtualSockets;
    }


    /**
     * Sets the value of the virtualSockets property.
     *
     * @param value
     *     allowed object is
     *     {@link VirtualSockets }
     *
     */
    public void setVirtualSockets(VirtualSockets value)
    {
        this.virtualSockets = value;
    }


    /**
     * Gets the value of the widgetId property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getWidgetId()
    {
        return widgetId;
    }


    /**
     * Sets the value of the widgetId property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setWidgetId(String value)
    {
        this.widgetId = value;
    }


    /**
     * Gets the value of the contextId property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getContextId()
    {
        return contextId;
    }


    /**
     * Sets the value of the contextId property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setContextId(String value)
    {
        this.contextId = value;
    }


    public AccessSettings getAccess()
    {
        return access;
    }


    public void setAccess(final AccessSettings access)
    {
        this.access = access;
    }
}
