/*
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2012.02.06 at 03:54:23 PM CET
//
package com.hybris.cockpitng.core.impl.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java element interface generated in the
 * generated package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the Java representation for XML content.
 * The Java representation of XML content can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory methods for each of these are provided in
 * this class.
 *
 */
@XmlRegistry
public class ObjectFactory
{
    private static final QName _WidgetDefinition_QNAME = new QName("", "widget-definition");
    private static final QName _ActionDefinition_QNAME = new QName("", "action-definition");
    private static final QName _EditorDefinition_QNAME = new QName("", "editor-definition");
    private static final QName _Keyword_QNAME = new QName("", "keyword");
    private static final QName _ComponentDefinition_QNAME = new QName("", "component-definition");


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package:
     * generated
     *
     */
    public ObjectFactory()
    {
        super();
    }


    /**
     * Create an instance of {@link Setting }
     *
     */
    public Setting createSetting()
    {
        return new Setting();
    }


    /**
     * Create an instance of {@link Keywords }
     *
     */
    public Keywords createKeywords()
    {
        return new Keywords();
    }


    /**
     * Create an instance of {@link Settings }
     *
     */
    public Settings createSettings()
    {
        return new Settings();
    }


    /**
     * Create an instance of {@link WidgetDefinition }
     *
     */
    public WidgetDefinition createWidgetDefinition()
    {
        return new WidgetDefinition();
    }


    /**
     * Create an instance of {@link ActionDefinition }
     *
     */
    public ActionDefinition createActionDefinition()
    {
        return new ActionDefinition();
    }


    /**
     * Create an instance of {@link EditorDefinition }
     *
     */
    public EditorDefinition createEditorDefinition()
    {
        return new EditorDefinition();
    }


    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WidgetDefinition }{@code >}
     *
     */
    @XmlElementDecl(namespace = "", name = "widget-definition", substitutionHeadNamespace = "", substitutionHeadName = "component-definition")
    public JAXBElement<WidgetDefinition> createWidgetDefinition(final WidgetDefinition value)
    {
        return new JAXBElement<>(_WidgetDefinition_QNAME, WidgetDefinition.class, null, value);
    }


    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActionDefinition }{@code >}
     *
     */
    @XmlElementDecl(namespace = "", name = "action-definition", substitutionHeadNamespace = "", substitutionHeadName = "component-definition")
    public JAXBElement<ComponentDefinition> createActionDefinition(final ComponentDefinition value)
    {
        return new JAXBElement<>(_ActionDefinition_QNAME, ComponentDefinition.class, null, value);
    }


    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EditorDefinition }{@code >}
     *
     */
    @XmlElementDecl(namespace = "", name = "editor-definition", substitutionHeadNamespace = "", substitutionHeadName = "component-definition")
    public JAXBElement<ComponentDefinition> createEditorDefinition(final ComponentDefinition value)
    {
        return new JAXBElement<>(_EditorDefinition_QNAME, ComponentDefinition.class, null, value);
    }


    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     *
     */
    @XmlElementDecl(namespace = "", name = "keyword")
    public JAXBElement<String> createKeyword(final String value)
    {
        return new JAXBElement<>(_Keyword_QNAME, String.class, null, value);
    }


    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComponentDefinition }{@code >}
     *
     */
    @XmlElementDecl(namespace = "", name = "component-definition")
    public JAXBElement<ComponentDefinition> createComponentDefinition(final ComponentDefinition value)
    {
        return new JAXBElement<>(_ComponentDefinition_QNAME, ComponentDefinition.class, null, value);
    }
}
