/*
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2016.03.09 at 09:16:15 AM CET
//
package com.hybris.cockpitng.config.explorertree.jaxb;

import com.hybris.cockpitng.core.config.annotations.Mergeable;
import com.hybris.cockpitng.core.config.impl.jaxb.hybris.commonconfig.Positioned;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>Java class for explorer-node complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="explorer-node"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.hybris.com/cockpitng/config/common}positioned"&gt;
 *       &lt;sequence&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element name="navigation-node" type="{http://www.hybris.com/cockpitng/config/explorertree}navigation-node"/&gt;
 *           &lt;element name="type-node" type="{http://www.hybris.com/cockpitng/config/explorertree}type-node"/&gt;
 *           &lt;element name="dynamic-node" type="{http://www.hybris.com/cockpitng/config/explorertree}dynamic-node"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="id" use="required" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="expanded-by-default" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *       &lt;attribute name="merge-mode" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "explorer-node", propOrder = {
                "navigationNodeOrTypeNodeOrDynamicNode"
})
@XmlSeeAlso({
                NavigationNode.class,
                TypeNode.class,
                DynamicNode.class
})
public abstract class ExplorerNode
                extends Positioned
{
    @XmlElements({
                    @XmlElement(name = "navigation-node", type = NavigationNode.class),
                    @XmlElement(name = "type-node", type = TypeNode.class),
                    @XmlElement(name = "dynamic-node", type = DynamicNode.class)
    })
    @Mergeable(key = "id")
    protected List<ExplorerNode> navigationNodeOrTypeNodeOrDynamicNode;
    @XmlAttribute(name = "id", required = true)
    protected String id;
    @XmlAttribute(name = "expanded-by-default")
    protected Boolean expandedByDefault;
    @XmlAttribute(name = "merge-mode")
    protected String mergeMode;


    /**
     * Gets the value of the navigationNodeOrTypeNodeOrDynamicNode property.
     *
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the navigationNodeOrTypeNodeOrDynamicNode property.
     *
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNavigationNodeOrTypeNodeOrDynamicNode().add(newItem);
     * </pre>
     *
     *
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NavigationNode }
     * {@link TypeNode }
     * {@link DynamicNode }
     *
     *
     */
    public List<ExplorerNode> getNavigationNodeOrTypeNodeOrDynamicNode()
    {
        if(navigationNodeOrTypeNodeOrDynamicNode == null)
        {
            navigationNodeOrTypeNodeOrDynamicNode = new ArrayList<ExplorerNode>();
        }
        return this.navigationNodeOrTypeNodeOrDynamicNode;
    }


    /**
     * Gets the value of the id property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getId()
    {
        return id;
    }


    /**
     * Sets the value of the id property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setId(String value)
    {
        this.id = value;
    }


    /**
     * Gets the value of the expandedByDefault property.
     *
     * @return
     *     possible object is
     *     {@link Boolean }
     *
     */
    public boolean getExpandedByDefault()
    {
        if(expandedByDefault == null)
        {
            return false;
        }
        else
        {
            return expandedByDefault;
        }
    }


    /**
     * Sets the value of the expandedByDefault property.
     *
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *
     */
    public void setExpandedByDefault(Boolean value)
    {
        this.expandedByDefault = value;
    }


    /**
     * Gets the value of the mergeMode property.
     *
     * @return
     *     possible object is
     *     {@link String }
     *
     */
    public String getMergeMode()
    {
        return mergeMode;
    }


    /**
     * Sets the value of the mergeMode property.
     *
     * @param value
     *     allowed object is
     *     {@link String }
     *
     */
    public void setMergeMode(String value)
    {
        this.mergeMode = value;
    }
}
